#!/bin/bash
# Name of the job
#SBATCH --no-requeue
#SBATCH --job-name="openMP_scal"
#SBATCH --partition=THIN
#SBATCH -N 3
#SBATCH --nodelist=thin[004-006]
#SBATCH -n 72
#SBATCH --exclusive
#SBATCH --time=02:00:00
#SBATCH --output="./jobs/omp_sc_thin.out"



echo LOADING MODULES...
echo
module load openMPI/4.1.5/gnu/12.2.1

echo SETTING THREADS AFFINITY POLICY...
echo
alloc=close
export OMP_PLACES=cores
export OMP_PROC_BIND=$alloc

echo COMPILING EXECUTABLES...
echo
datafolder=res



echo
echo -------------------------------------------------------------
echo -------------------------------------------------------------
echo

node=EPYC
scal=openMP
n_gen=50
#n_procs=2


echo CREATING/OVERWRITING CSV FILE...
echo
datafile=$datafolder/omp_sc_thin.csv
echo "#,,," > ${datafile}
echo "#node:,${node},," >> $datafile
echo "#scalability:,${scal},," >> $datafile
echo "#performance_measure:,time(s),," >> $datafile
echo "#threads_affinity_policy:,${alloc},," >> $datafile
echo "#playground_x_size:,${mat_x_size},," >> $datafile
echo "#playground_y_size:,${mat_y_size},," >> $datafile
echo "#generations:,${n_gen},," >> $datafile
echo "#sockets:,2,," >> $datafile
echo "#,,," >> $datafile
echo "#,,," >> $datafile
echo "threads_per_socket,ordered,static,static_in_place" >> $datafile


echo PERFORMING MEASURES...
echo

### generating random playground

mpirun ./main.x -i -k 25000 -f conway.pgm

mkdir -p evos
mkdir -p res
#make clean; make;


for times in $(seq 1 1 4)   
do
    for n_threads in $(seq 1 1 12) 
    do    
    ### running the evolution
        export OMP_NUM_THREADS=$n_threads
        echo ${times} ${OMP_NUM_THREADS}
        mpirun -np 6 --map-by node --bind-to socket --report-bindings ./main.x -r -e 1 -n $n_gen -s 0 -f conway.pgm -o ${datafile}
        echo -----------
    done 
done

echo
echo -------------------------------------------------------------
echo -------------------------------------------------------------
